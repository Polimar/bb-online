version: '3.8'

services:
  # Database PostgreSQL
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: brainbrawler
      POSTGRES_USER: brainbrawler_user
      POSTGRES_PASSWORD: brainbrawler_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U brainbrawler_user -d brainbrawler"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data

  # Kafka Message Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API + Socket.io + GameEngine
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://brainbrawler_user:brainbrawler_pass@postgres:5432/brainbrawler
      REDIS_URL: redis://redis:6379
      KAFKA_BROKERS: kafka:9092
      KAFKA_CLIENT_ID: brainbrawler-game-service
      KAFKA_ENABLED: false
      REDIS_ENABLED: true
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGIN: http://localhost:3001
      GAME_ENGINE_ENABLED: true
      SOCKET_IO_ENABLED: true
      DEFAULT_QUESTION_TIME: 15
      DEFAULT_TOTAL_QUESTIONS: 5
      MAX_PLAYERS_PER_ROOM: 8
      ROOM_CODE_LENGTH: 6
      AUTO_START_THRESHOLD: 2
      CONNECTION_POOL_SIZE: 5
      REDIS_TTL: 3600
      # SMTP Disabled for Railway
      SMTP_ENABLED: false
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Static Files
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    environment:
      API_BASE_URL: http://backend:3000
    ports:
      - "3001:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local

networks:
  default:
    name: brainbrawler-network 